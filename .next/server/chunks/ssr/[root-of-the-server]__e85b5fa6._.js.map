{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.5-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/optimize-vite-config.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview This file contains a Genkit flow that optimizes Vite configurations for React projects.\n * It provides functions to automatically generate and validate Vite configurations to optimize build outputs, \n * recommend code-splitting strategies, and analyze configurations for potential areas of optimization.\n *\n * - optimizeViteConfig - A function that takes project details and returns optimized Vite configurations.\n * - OptimizeViteConfigInput - The input type for the optimizeViteConfig function.\n * - OptimizeViteConfigOutput - The return type for the optimizeViteConfig function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst OptimizeViteConfigInputSchema = z.object({\n  projectType: z.string().describe('The type of project (e.g., React, Vue, etc.)'),\n  projectDetails: z.string().describe('Detailed information about the project, such as dependencies and configurations.'),\n});\nexport type OptimizeViteConfigInput = z.infer<typeof OptimizeViteConfigInputSchema>;\n\nconst OptimizeViteConfigOutputSchema = z.object({\n  optimizedConfig: z.string().describe('The optimized Vite configuration in JSON format.'),\n  recommendations: z.string().describe('Recommendations for further optimization.'),\n});\nexport type OptimizeViteConfigOutput = z.infer<typeof OptimizeViteConfigOutputSchema>;\n\nexport async function optimizeViteConfig(input: OptimizeViteConfigInput): Promise<OptimizeViteConfigOutput> {\n  return optimizeViteConfigFlow(input);\n}\n\nconst optimizeViteConfigPrompt = ai.definePrompt({\n  name: 'optimizeViteConfigPrompt',\n  input: {schema: OptimizeViteConfigInputSchema},\n  output: {schema: OptimizeViteConfigOutputSchema},\n  prompt: `You are an expert in optimizing Vite configurations for various project types.\n\n  Based on the provided project details, generate an optimized Vite configuration that includes:\n  - Code-splitting recommendations for efficient bundle caching.\n  - Analysis of the existing configuration for potential optimizations, such as code elimination and dead code removal.\n\n  Project Type: {{{projectType}}}\n  Project Details: {{{projectDetails}}}\n\n  Return the optimized configuration in JSON format and provide recommendations for further optimization.\n  Ensure the generated configuration is valid and compatible with the project type.\n  `, \n});\n\nconst optimizeViteConfigFlow = ai.defineFlow(\n  {\n    name: 'optimizeViteConfigFlow',\n    inputSchema: OptimizeViteConfigInputSchema,\n    outputSchema: OptimizeViteConfigOutputSchema,\n  },\n  async input => {\n    const {output} = await optimizeViteConfigPrompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;;;CAQC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,gCAAgC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC7C,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACjC,gBAAgB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACtC;AAGA,MAAM,iCAAiC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC9C,iBAAiB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACrC,iBAAiB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACvC;AAGO,eAAe,mBAAmB,KAA8B;IACrE,OAAO,uBAAuB;AAChC;AAEA,MAAM,2BAA2B,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC/C,MAAM;IACN,OAAO;QAAC,QAAQ;IAA6B;IAC7C,QAAQ;QAAC,QAAQ;IAA8B;IAC/C,QAAQ,CAAC;;;;;;;;;;;EAWT,CAAC;AACH;AAEA,MAAM,yBAAyB,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC1C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,yBAAyB;IAChD,OAAO;AACT;;;IA/BoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 316, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/optimize/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {optimizeViteConfig as '406d64fc0327f9940a3940610565126b0ef44cea06'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 368, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/optimize/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/optimize/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/optimize/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6R,GAC1T,2DACA","debugId":null}},
    {"offset": {"line": 382, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/optimize/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/optimize/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/optimize/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyQ,GACtS,uCACA","debugId":null}},
    {"offset": {"line": 396, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}